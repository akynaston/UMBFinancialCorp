<project name="FCPS" default="dist" basedir=".">
    <property name="iteration" value="1"/>
    <property name="docs.dir" value="doc"/>
	<property name="build.dir" value="build"/>
	<property name="deliv.zip" value="delivery/RSADriver-Release-${iteration}.zip"/>

    <macrodef name="xsltAndVersion">
        <attribute name="in"/>
        <attribute name="out"/>
        <attribute name="style"/>
        <attribute name="driverRevision" default="${iteration}.${build.number}"/>
        <element name="cc-elements" implicit="yes" optional="yes"/>
        <sequential>
            <xslt in="@{in}" out="@{out}" style="@{style}">
        <param name="DRIVER_REVISION" expression="@{driverRevision}"/>
        <cc-elements/>
           </xslt>            
        </sequential>
    </macrodef>
    
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>
	
    <target name="init">
        <buildnumber/>
    </target>
	
	<target name="build-ace_conn">
		<!--
		<antcall C:\work\UMBBank\SVN-RSA-UMBBankBranch\ace_conn
		-->
		
	</target>
	
    <target name="dist-idmunit" depends="init">
        
		<!--
        <xslt in="test/idmunit-config.xml" out="${build.dir}/idmunit-configTEMP.xml" style="config/idmunit-transformer.xsl" >
            <param name="live-profile" expression="TEST"/>
        </xslt>

        <xslt in=".classpath" out="${build.dir}/.classpath" style="config/build-idmunit-classpath.xsl"/>
		-->


        <zip destfile="${build.dir}/${customer.name}-IdMUnitTests.zip">
            <zipfileset file="${build.dir}/.classpath" prefix="${customer.name}-IdMUnitTests"/>
            <zipfileset file=".project" prefix="${customer.name}-IdMUnitTests"/>
            <zipfileset file="License.txt" prefix="${customer.name}-IdMUnitTests"/>

            <!-- Get the main libraries: -->
            <zipfileset dir="${idmunit-lib.dir}" prefix="${customer.name}-IdMUnitTests/${idmunit-lib.dir}"/>
            
            <!-- Get the DXCMD jar files (and any others) in our lib/test directory: -->
            <zipfileset dir="lib/test" prefix="${customer.name}-IdMUnitTests/idmunit-external/lib/test"/>
			
			<!-- Get the latest HTTP file input connector-->
			<zipfileset dir="lib/sf_data_connector" prefix="${customer.name}-IdMUnitTests/idmunit-external/lib/sf_data_connector"/>
            
            <!-- Get the new XMLFileconn and related files -->
            <zipfileset file="src-xmlfile_conn/dist/xmlfile_conn.jar" prefix="${customer.name}-IdMUnitTests/${idmunit-lib.dir}"/>
            
            <!-- Get the batch file to run HRDS standalone listener until we can resolve sf_data connector running as proper idmunit connector-->
            <zipfileset file="test/runIdMUnitHRDSWebServer.bat" prefix="${customer.name}-IdMUnitTests"/>
            
            <zipfileset dir="test" prefix="${customer.name}-IdMUnitTests/test">
                <exclude name="idmunit-config.xml"/>
                <exclude name="**/.~*/**"/>
                <exclude name="com/**"/> <!-- Exclude the XMLSplitter test files . . -->
                <exclude name="**/xmlsplitter-**/**"/>
                <exclude name="runHRDSListener.bat"/>
            </zipfileset>
            <zipfileset file="${build.dir}/idmunit-configTEMP.xml" fullpath="${customer.name}-IdMUnitTests/test/idmunit-config.xml"/>
            <zipfileset file="autotests.xml" prefix="${customer.name}-IdMUnitTests"/>
            <zipfileset file="runtests.bat" prefix="${customer.name}-IdMUnitTests"/>
        </zip>
        
        <!-- Delete the temporary classpath we created for the IdMUnit build.
        <delete file="${build.dir}/.classpath"/>
        -->
        
    </target>
	
	<target name="dist" depends="init, build-ace_conn">

        <!-- Set up rev filter -->
        <filter token="BUILD_AND_REV" value="${iteration}.${build.number}"/>

        <copy todir="build" filtering="true">
            <fileset file="${docs.dir}/README.txt"/>
        </copy>

        <copy todir="build/export">
            <fileset file="export/RSA-vanilla-from-packages.xml">              
            </fileset>
		</copy>

        <zip destfile="build/export/RSADriver_DesignerPackages.zip">
            <zipfileset dir="RSA-UMBBankBranch/ace_shim/designer_packages">
            </zipfileset>
        </zip>		

        <zip destfile="${deliv.zip}">
            <zipfileset dir="build">
				<include name="RSA-UMBBankBranch/ace_shim/delivery/RSA-ACE-driver_obfuscated-2.1.62.zip"/>
            </zipfileset>
        </zip>
		
    </target>
    


</project>